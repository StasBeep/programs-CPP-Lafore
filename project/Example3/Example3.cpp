// example3.cpp
// рабочая программа для всех упражнений главы

#include <iostream>
using namespace std;

////////////////////////////////////////////////////////////////////
// структура для 1 упражнения
struct phone
{
	int city;		// три первые цифры
	int ephone;		// три цифры в середине
	int abonent;	// четыре цифры в конце
};

///////////////////////////////////////////////////////////////////
// структура для 2 упражнения
struct point
{
	int xz;
	int yz;
};

///////////////////////////////////////////////////////////////////
// струкутры для 3 упражнения
struct Distance
{
	int feet;
	float inches;
};

struct Volume
{
	Distance leight;
	Distance weight;
	Distance heght;
};

///////////////////////////////////////////////////////////////////
// структура для 4 упражнения
struct employee
{
	int people;
	float coins;
};

///////////////////////////////////////////////////////////////////
// структура для 5 упражнения
struct date
{
	int day;
	int month;
	int year;
};

///////////////////////////////////////////////////////////////////
// перечисления для 6 упражнения
enum etype{laborer, secretary,manager,accountant,executive,researcher};

///////////////////////////////////////////////////////////////////
int main()
{
	setlocale(LC_ALL, "Russian");

	// меню
	int VVxod;	// ключ для работы меню
	
	// описание меню
	cout << "МЕНЮ" << endl;
	cout << "Упражнение 1" << endl;
	cout << "Упражнение 2" << endl;
	cout << "Упражнение 3" << endl;
	cout << "Упражнение 4" << endl;
	cout << "Упражнение 5" << endl;
	cout << "Упражнение 6" << endl;
	cout << "Упражнение 7" << endl;

	cout << "\n--------------------------------------------" << endl;
	cout << "Для выхода из меню нажмите 0\n" << endl;

	// зацикливание меню
	do
	{
		// подключение к меню
		cout << "Введите номер упражнения: ";
		cin >> VVxod;

		cout << "\n----------------------------------------\n" << endl;


		// Упражнение 1
		if (VVxod == 1)
		{

			// Упражнение 1:
			// Номер телефона, напрмер (212) 767-8900, можно условно разделить 
			// на три части: код города (212), номер телефонной станции (767) и
			// номер абонента (8900). Напишите программу с использованием струк-
			// туры, позволяющую раздельно хранить эти три части телефонного но-
			// мера. Назовите структуру phone. Создайте две структурные пере-
			// менные типа phone. Инициализацию одной из них произведите сами, а
			// значения для другой запросите с клавиатуры. Затем выведите содер-
			// жимое обеих переменных на экран. 

			cout << "\nУпражнение 1\n" << endl;

			phone number1 = { 222, 767, 8900 };
			phone number2;

			cout << "Введите код города, номер станции и номер абонента: ";
			cin >> number2.city >> number2.ephone >> number2.abonent;
			cout << "Мой номер " << "(" << number1.city << ")" << " "
				<< number1.ephone << " - " << number1.abonent << endl;
			cout << "Ваш номер " << "(" << number2.city << ")" << " "
				<< number2.ephone << " - " << number2.abonent << endl << endl;
		}

		// Упражнение 2
		if (VVxod == 2)
		{
			// Упражнение 2: 
			// Расположение точки на плоскости можно задать с помощью двух координат:
			// х и у. Написать программу, использующая для интерпритации точки на плос-
			// кости структуру с названием point. Определите три переменные типа point,
			// две из них инициализируйте с помощью значений, вводимых с клавиатуры. За-
			// тем присвойте третьей переменной значение суммы первых двух переменных и
			// выведите результат на экран.

			cout << "\nУпражнение 2\n" << endl;

			// переменные для структуры ввода и вывода информации
			point point1, point2, point3;

			// Ввод двух точек
			cout << "Введите координаты первой точки (х и у): ";
			cin >> point1.xz >> point1.yz;
			cout << "Введите координаты второй точки (х и у): ";
			cin >> point2.xz >> point2.yz;
			point3.xz = point1.xz + point2.xz;
			point3.yz = point1.yz + point2.yz;
			cout << "Координаты суммы этих двух точек (х и у): "
				<< point3.xz << " " << point3.yz << endl << endl;
		}

		// Упражнение 3
		if (VVxod == 3)
		{
			// Упражние 3:
			// Создать структуру с именем Volume, содержащие три поля типа
			// Distance, для хранения трёх измерений помещения. Определите
			// переменную типа Volume, инициализируйте её, вычислите объём,
			// занимаемым помещением, и выведите результат на экран. Для 
			// подсчёта объёма переведите каждое из значений типа Distance
			// в значение типа float, равное соответствующей длине в футах 
			// и хранимое в отдельной переменной. Вычислить объём

			cout << "\nУпражнение 3\n" << endl;

			Volume roomV;		// переменная типа Volume
			
			// задание парметров комнаты
			// задание длины комнаты
			roomV.leight.feet = 22;
			roomV.leight.inches = 6.5;
			// задание ширины комнаты
			roomV.weight.feet = 11;
			roomV.weight.inches = 3.2;
			// задание высоты комнаты
			roomV.heght.feet = 4;
			roomV.heght.inches = 9.9;
			
			// преобразование длины, ширины, высоты в вещественный формат
			float l = roomV.leight.feet + roomV.leight.inches / 12;
			float w = roomV.weight.feet + roomV.weight.inches / 12;
			float h = roomV.heght.feet + roomV.heght.inches / 12;

			// вывод результата объёма на экран
			cout << "Объём комнаты равен: " << l * w * h << endl << endl;
		}		// конец if3

		// Упражнение 4
		if (VVxod == 4)
		{
			// Упражнение 4:
			// Создайте структуру с именем employee, содержащую два поля:
			// int: номер сотрудника, float: величина его пособия в долла-
			// рах. Запросите с клавиатуры данные о трёх сотрудниках сох-
			// раните их в трёх структурных переменных типа employee и 
			// выведите информацию о каждом из сотрудников на экран.

			cout << "\nУпражнение 4\n" << endl;

			cout << "Зарегистрируйте 3 пользователей\n" << endl;
			
			// добавление трёх пользователей для структуры
			employee people1, people2, people3;
			
			// регистрация пользоователей
			cout << "Введите индекс первого пользователя и его сумму: ";
			cin >> people1.people >> people1.coins;

			cout << "Введите индекс второго пользователя и его сумму: ";
			cin >> people2.people >> people2.coins;

			cout << "Введите индекс третьего пользователя и его сумму: ";
			cin >> people3.people >> people3.coins;

			cout << "--------------------------------------------" << endl;
			cout << "Первый пользователь: " << people1.people << "  $ "
				 << people1.coins << endl;
			cout << "Второй пользователь: " << people2.people << "  $ "
				 << people2.coins << endl;
			cout << "Третий пользователь: " << people3.people << "  $ "
				 << people3.coins << endl << endl;
		}

		// Упражнение 5
		if (VVxod == 5)
		{
			// Упражнение 5:
			// Создайте структуру типа date, содержащую три поля int:
			// месяц, день и год. Попросите пользователя ввести день,
			// месяц и год в формате 31/12/2002, сохраните введённое 
			// значение в структурной переменной, а затем извлеките 
			// данные из этой переменной и выведите их на экран в том
			// же порядке,что и вводилось, но с . между ними

			cout << "\nУпражнение 5\n" << endl;

			date d1, d2;
			char ch;
			cout << "Введите дату через  / /  : ";
			cin >> d1.day >> ch >> d1.month >> ch >> d1.year;

			d2 = d1;
			cout << "Переведённая дата: " << d2.day << " . " << d2.month
				 << " . " << d2.year << endl << endl;
		}

		// Упражнение 6
		if (VVxod == 6)
		{
			// Упражнение 6:
			// Написать программу, которая по первой букве должности, вве-
			// дённой пользователем, определить соответствующее значение пе-
			// ременной, помещает это значение в переменную типа etype, а за-
			// тем выводит полностью название должности, первой буквы которой
			// ввёл пользователь 

			cout << "\nУпражнение 6\n" << endl;

			cout << "Введите первую букву должности\n";
			cout << "{laborer, secretary, manager, accountant, executive,"
				 << "researcher}";
			char press = 'a';
			cin >> press;


			switch (press)
			{
			case 'l':
				cout << "laborer\n" << endl;
				break;

			case 's':
				cout << "secretary\n" << endl;
				break;

			case 'm':
				cout << "manager\n" << endl;
				break;

			case 'a':
				cout << "accountant\n" << endl;
				break;

			case 'e':
				cout << "executive\n" << endl;
				break;

			case 'r':
				cout << "researcher\n" << endl;
				break;

			default:
				cout << "\nПопробуйте ещё раз...\n";
			}
		}

	} while (VVxod != 0);
}