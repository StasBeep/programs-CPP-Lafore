// Example.cpp
// Подключение русского языка

#include <iostream>
// упражнение 2
#include <iomanip>			// библиотека для setw
// упражнение 5
#include <ctype.h>			// для функции islower()
using namespace std;

int main()
{
	// Подключение русского языка 
	setlocale(LC_ALL, "Russian");
	cout << "Русский текст в консоли подключён!\n" << endl;


	// Упражнение 1:
	// Считая, что кубический фут равен 7,481 галлона, написать программу, запрашивающую у пользователя
	// число галлонов и выводящую на экран эквивалентный объем в кубических футах
	cout << "Упражнение 1" << endl;
	float numverGallonnov, KybichFyt;		// переменные для галлонов и кубических футов
	cout << "Введите число галлонов: ";
	cin >> numverGallonnov;					// ввод количества галлонов
	KybichFyt = numverGallonnov / 7.481;	// Вычисление кубического фута
	cout << numverGallonnov << " - галлонов = " << KybichFyt << " - кубических футов\n" << endl;

	// Упражнение 2:
	// Напишите программу, выдающую следующую таблицу:
	// 1990		 135
	// 1991		7290
	// 1992	   11300
	// 1993    16200
	cout << "Упражнение 2" << endl;
	long Age1 = 1990, Age2 = 1991, Age3 = 1992, Age4 = 1993;
	long Kol1 = 135, Kol2 = 7290, Kol3 = 11300, Kol4 = 16200;
	cout << setw(4) << Age1 << setw(10) << Kol1 << endl
		 << setw(4) << Age2 << setw(10) << Kol2 << endl
		 << setw(4) << Age3 << setw(10) << Kol3 << endl
		 << setw(4) << Age4 << setw(10) << Kol4 << endl << endl;

	// Упражнение 3:
	// Написать программу, генерирующую следующий вывод:
	// 10
	// 20
	// 19
	// Использовать представление числа 10 в виде целой константы. Для вывода числа 20 воспользуйтесь
	// одной из арифметических операций с присваиванием, а для вывода 19 - операцией декремента
	cout << "Упражнение 3" << endl;
	const int AtrCon = 10;
	cout << AtrCon << endl;				// вывод целой константы
	int Atr = AtrCon;					// присваивание константы другой переменной, т.к. константу изменять нельзя
	Atr += 10;							// получение значения 20
	cout << Atr << endl;				// вывод значения 20, с помощью арифметических операций с присваиванием
	cout << --Atr << endl << endl;		// вывод значения 19, с помощью декремента

	// Упражнение 4:
	// Напишите программу, выводящую на экран ваше любимое стихотворение. Для разбиения испльзуйте подходящую 
	// управляющую последовательность
	cout << "Упражнение 4" << endl;
	char Tab = '\t';		// табуляция
	char Tochka = '\.';		// точка
	char Zapytay = '\,';	// запятая
	char Dvoetochie = '\:'; // двоеточие
	cout << Tab << "Храни меня" << Zapytay << "мой автомат" << Tochka << endl
		<< Tab << "Когда ничто уже не нужно" << Tochka << endl
		<< Tab << "Ни бред любви" << Zapytay << "не лепет дружбы" << Tochka << endl
		<< Tab << "На грани между тьмой и светом" << Zapytay << endl
		<< Tab << "Где фиолетовый закат" << Tochka << endl
		<< Tab << "В чужой земле" << Zapytay << "средь миноретов" << Zapytay << endl
		<< Tab << "Храни меня" << Zapytay << "мой автомат" << Tochka << endl
		<< Tab << "В любую дрянь" << Dvoetochie << "В жару и стужу" << Zapytay << endl
		<< Tab << "Под взрывы" << Zapytay << "вопли" << Zapytay << "град и мат" << Zapytay << endl
		<< Tab << "В грязи" << Zapytay << "крови" << "в блевотных лужах" << Zapytay << endl
		<< Tab << "Храни меня" << Zapytay << "мой автомат" << Tochka << endl
		<< Tab << "А если жизнь промчалась глупо" << Dvoetochie << endl
		<< Tab << "Мираж из званий и наград" << Tochka << endl
		<< Tab << "Последним в поле" << Zapytay << "среди трупов" << endl
		<< Tab << "Храни меня" << Zapytay << "мой автомат" << Tochka << endl
		<< Tab << "Пусть даже выжить бесполезно" << endl
		<< Tab << "И божий суд присудит" << Dvoetochie << "ад" << Tochka << endl
		<< Tab << "Умри со мной" << Tochka << "И в чёрных безднах" << endl
		<< Tab << "Храни меня" << Zapytay << "мой автомат\!" << endl << endl;

	// Упражнение 5:
	// Библиотечная функция islower принимает в качестве аргумента один символ (букву) и возвращает ненулевое
	// целое значение в том случае, если буква является строчной, и нулевое, если буква является заглавной     
	// Описание функции хранится в файле CTYPE.H. Напишите программу, которая принимает букву от пользователя, 
	// а затем выводит нулевое значение или ненулевое значение в зависимости от того, является ли буква строч-
	// ной или нет.
	cout << "Упражнение 5" << endl;
	char af;
	int biy;
	cout << "Примечание: работает только с английским текстом!\n";
	cout << "Введите букву: ";
	cin >> af;
	biy = islower(af);						// функция которая подключается с библиотекой ctype.h и выполняет задание автоматически
	cout << "Результат: " << biy << "\n\n";

	// Упражнение 6:
	// На биражевых торгах за 1 фунт стерлингов давали $1.487, за франк - $0.172, за немецкую марку - $0.584,
	// за японскую йену - $0.00955. Напишите программу, которая запрашивает денежную сумму в долларах,а затем
	// выводит эквивалентные суммы в других валютах.
	cout << "Упражнение 6" << endl;
	cout << "Введите сумму долларов: ";
	float couns;					// переменная для ввода количества денег в долларах
	cin >> couns;
	cout << "\n";
	cout << "Таблица соотношений: " << endl;
	float counsFyt, counsFrank, counsMark, counsYeny;
	counsFyt = couns / 1.487;		// расчёт фунтов стерлингов из долларов
	counsFrank = couns / 0.172;		// расчёт франков из долларов
	counsMark = couns / 0.584;		// расчёт немецких марков из долларов
	counsYeny = couns / 0.00955;	// расчёт японских йену из долларов
	cout  << couns << setw(15) << "- долларов" << setw(10) << counsFyt << setw(25) << "- Фунтов" << endl
		<< couns << setw(15) << "- долларов" << setw(10) << counsFrank << setw(25) << "- Франков" << endl
		<< couns << setw(15) << "- долларов" << setw(10) << counsMark << setw(25) << "- Нем. Марков" << endl
		<< couns << setw(15) << "- долларов" << setw(10) << counsYeny << setw(25) << "- Японских Йену\n" << endl;

	// Упражнение 7:
	// Температуру, измеренную в градусах Цельсию, можно перевести в градусы по Фаренгейту путём умножения на 9/5 и сложения с
	// числом 32. Напишите программу, запрашивающую температуру в градусах Цельсию и отображающую её эквивалент по 
	// Фаренгейту
	cout << "Упражнение 7" << endl;
	double gradysZel, gradysFar;
	cout << "Введите градусы Цельсия: ";
	cin >> gradysZel;
	gradysFar = gradysZel * 9 / 5 + 32;					// Расчёт градусов по Фаренгейту
	cout << gradysZel << " - градусов Цельсия = " << gradysFar << " - градусов по Фаренгейту\n" << endl;

	// Упражнение 8:
	// Применение функции setfill() - она такая же как и setw(), но только пустое вместо пробелов заполняется ...
	cout << "Упражнение 8" << endl;
	cout << "Москва" << setw(10) << setfill('.') << "8425785\n" << endl;

	// Упражнение 9:
	// Две дроби a/b и с/d можно сложить следующим образом: а/b + c/d = (a*d + b*c)/(b*d)
	// Написать программу, запрашивающую у пользователя значение двух дробей, а затем выводящую результат, также записанный в
	// формате дроби. Взаимодействие программы с пользователем может выглядить так: (смотри работу самой программы).
	cout << "Упражнение 9" << endl;
	int a, b, c, d;
	char dummychar;
	cout << "Введите первую дробь: ";
	cin >> a >> dummychar >> b;
	cout << "Введите вторую дробь: ";
	cin >> c >> dummychar >> d;
	cout << "Cумма равна: " << (a * d + b * c) << "\/" << (b * d) << endl << endl;

	// Упражнение 10:
	// (задание не понятное арифментически, но ничего сложного нет в этом)
	cout << "Упражнение 10" << endl;
	cout << "Eror\n" << endl;

	// Упражнение 11:
	// Форматирование вывода по левому краю
	cout << "Упражнение 11" << endl;
	cout << setfill(' ');
	cout << setiosflags(ios::left) << setw(15) << "Фамилия" << setw(15) << "Имя" << setw(20) << "Адрес" << setw(25) << "Город" << endl
		<< setw(15) << "Петров" << setw(15) << "Василий" << setw(20) << "Кленовая 16" << setw(25) << "Санкт-Петербург" << endl
		<< setw(15) << "Иванов" << setw(15) << "Сергей" << setw(20) << "Осиновая 3" << setw(25) << "Находка" << endl
		<< setw(15) << "Сидоров" << setw(15) << "Иван" << setw(20) << "Берёзовая 21" << setw(25) << "Калининград\n" << endl;

	// Упражнение 12:
	// Прибавление дробной части. Отбрасывание дробной части
	cout << "Упражнение 12" << endl;
	float decpounds;
	int pounds;
	float decfrac;		// дробная часть
	cout << "Введите число ";
	cin >> decpounds;
	pounds = static_cast<int>(decpounds);	// отбрасывание дробные части
	decfrac = decpounds - pounds;			// прибавление дробной части
	cout << "pounds - отбрасывание дробной части " << pounds << endl;
	cout << "decfrac - прибавление дробной части " << decfrac << endl;
	return 0;
}